<%- include('partial/header', { title: 'Wishmewell Apartment',email:email,roleName:roleName }) %>
<%- include('partial/sidebar', { name: name}) %>
<style>
	.spinner-border {
    width: 1rem;
    height: 1rem;
    border-width: .2em;
}

</style>
		<div class="page-wrapper">
			<div class="content container-fluid">
				<div class="page-header">
					<div class="row align-items-center">
					
						<div class="col">
							<h3 class="page-title mt-5">Add new Promotions</h3>
							<a href="/portal/info-promotion">Go back</a>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-lg-12">
						<form id="roomCategoryForm" enctype="multipart/form-data">
							<div class="row formtype">
								<!-- Text (Promotion Message) -->
								<!-- <div class="col-md-4">
									<div class="form-group">
										<label>Promotion Message</label>
										<input name="text" type="text" class="form-control" id="text" required>
									</div>
								</div> -->
								<!-- Start Time -->
								<div class="col-md-4">
									<div class="form-group">
										<label>Start Time</label>
										<input name="startTime" type="datetime-local" class="form-control" id="startTime" required>
									</div>
								</div>
								<!-- End Time -->
								<div class="col-md-4">
									<div class="form-group">
										<label>End Time</label>
										<input name="endTime" type="datetime-local" class="form-control" id="endTime" required>
									</div>
								</div>
						
								<!-- Image Upload -->
								<!-- <div class="col-md-4">
									<div class="form-group">
										<label>Image Upload</label>
										<div class="custom-file mb-3">
											<input name="pictures[]" type="file" class="custom-file-input" id="picture" accept="image/*" multiple>
											<label class="custom-file-label" for="picture">Choose images</label>
										</div>
									</div>
									<div id="imagePreview" class="mt-3"></div>
								</div> -->
						
								<!-- Message -->
								<div class="col-md-4">
									<div class="form-group">
										<label>Message</label>
										<textarea name="text" class="form-control" rows="5" id="description"></textarea>
									</div>
								</div>
							</div>
						
							<button type="submit" class="btn btn-primary buttonedit ml-2">
								<span class="button-text">Save</span>
								<span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
							</button>
							<button type="button" class="btn btn-primary buttonedit">Cancel</button>
						</form>
						
						
					</div>
				</div>
				<!-- <button type="button" class="btn btn-primary buttonedit ml-2">Save</button>
				<button type="button" class="btn btn-primary buttonedit">Cancel</button> -->
			</div>
		</div>
	</div>
	<script src="assets/js/jquery-3.5.1.min.js"></script>
	<script src="assets/js/popper.min.js"></script>
	<script src="assets/js/bootstrap.min.js"></script>
	<script src="assets/js/moment.min.js"></script>
	<script src="assets/js/select2.min.js"></script>
	<script src="assets/plugins/slimscroll/jquery.slimscroll.min.js"></script>
	<script src="assets/plugins/raphael/raphael.min.js"></script>
	<script src="assets/js/bootstrap-datetimepicker.min.js"></script>
	<script src="assets/js/script.js"></script>
	<script>
	$(function() {
		$('#datetimepicker3').datetimepicker({
			format: 'LT'
		});
	});
	</script>

<script>
    // Function to show toast notification
    function showToast(message, type = 'error') {
        const toast = document.createElement('div');
        toast.classList.add('toast', 'align-items-center', 'text-white', `bg-${type}`, 'border-0');
        toast.style.position = 'fixed';
        toast.style.bottom = '20px';
        toast.style.right = '20px';
        toast.innerHTML = `
            <div class="d-flex">
                <div class="toast-body">${message}</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        `;
        document.body.appendChild(toast);
        new bootstrap.Toast(toast).show();

        setTimeout(() => {
            document.body.removeChild(toast);
        }, 4000); // Remove after 3 seconds
    }

    document.getElementById('roomCategoryForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const form = document.getElementById('roomCategoryForm');
        const formData = new FormData(form);

        // Validate form inputs (e.g., text, startTime, and endTime)
        const text = formData.get('text');
        const startTime = formData.get('startTime');
        const endTime = formData.get('endTime');

        if (!text || !startTime || !endTime) {
            showToast('All fields are required!', 'danger');
            return;
        }

        // Check if endTime is greater than startTime
        if (new Date(startTime) >= new Date(endTime)) {
            showToast('End Time must be later than Start Time!', 'danger');
            return;
        }

        // Show loading spinner
        const button = document.querySelector('.btn-primary .button-text');
        const spinner = document.querySelector('.spinner-border');
        button.classList.add('d-none');
        spinner.classList.remove('d-none');

        // Submit form data using Fetch API
        fetch('/portal/info-promotion-create', {
            method: 'POST',
			headers: {
                'Content-Type': 'application/json'
            },
            credentials: 'include',  // Include credentials for authentication (e.g., JWT token)
            body: JSON.stringify({
				text,
                startTime,
                endTime,
                // pictures: Array.from(formData.get('pictures')).map(file => file.name) // If using image upload feature
			}),
        })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                    showToast('Promotion created successfully!', 'success');
                    form.reset(); // Reset form on success
                } else {
                    showToast(data.message || 'An error occurred.', 'danger');
                }
            })
            .catch(error => {
                showToast('Server error! Please try again.', 'danger');
            })
            .finally(() => {
                // Hide loading spinner
                button.classList.remove('d-none');
                spinner.classList.add('d-none');
            });
    });
</script>

</body>

</html>